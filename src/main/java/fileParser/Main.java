package fileParser;

import fileParser.dataStorage.DataHolder;
import fileParser.dataStorage.StatisticsHolder;
import fileParser.dto.*;
import fileParser.writers.DoubleWriter;
import fileParser.writers.IntegerWriter;
import fileParser.writers.StringWriter;

import java.io.FileNotFoundException;
import java.util.concurrent.atomic.AtomicBoolean;

public class Main {

    public static void main(String[] args) {

        String[] argsTEST = new String[9];
        argsTEST[0] = "-o";
        argsTEST[1] = "";//"/–ø–∞–ø–∫–∞1/–ø–∞–ø–∫–∞2";
        argsTEST[2] = "-p";
        argsTEST[3] = "-prefix-";
        argsTEST[4] = "-f";
        argsTEST[5] = "-a";
        argsTEST[6] = "src/main/java/fileParser/file1.txt";
        argsTEST[7] = "src/main/java/fileParser/file2.txt";
        argsTEST[8] = "src/main/java/fileParser/file3.txt";

        ArgumentsParser argumentsParser = new ArgumentsParser();
        DataHolder dataHolder = new DataHolder();
        AtomicBoolean isFinished = new AtomicBoolean(false);
        SessionParametres sessionParametres;

        try {//TODO –Ω–µ –∑–∞–±—ã—Ç—å –∑–∞–º–µ–Ω–∏—Ç—å + –ø—Ä–æ–≤–µ—Ä–∫–∏
            sessionParametres = argumentsParser.parse(argsTEST);
        } catch (FileNotFoundException exc) {
            System.out.println("–ü—É—Ç–∏ —Ñ–∞–π–ª–æ–≤ –Ω–µ –±—ã–ª–∏ —É–∫–∞–∑–∞–Ω—ã");
            return;
        }
        StatisticsHolder statisticsHolder = new StatisticsHolder(sessionParametres);

        System.out.println(sessionParametres.getMessage());

        FileProcessor fileProcessor = new FileProcessor(
                sessionParametres.filesPathsLst(),
                dataHolder,
                statisticsHolder,
                isFinished);

        Runnable integerWriterRunnable = new IntegerWriter(
                dataHolder,
                sessionParametres,
                isFinished);
        Runnable  doubleWriterRunnable = new DoubleWriter(
                dataHolder,
                sessionParametres,
                isFinished);
        Runnable  stringWriterRunnable = new StringWriter(
                dataHolder,
                sessionParametres,
                isFinished);

        Thread readThread = new Thread(fileProcessor);
        Thread writeIntegerThread = new Thread(integerWriterRunnable);
        Thread writeDoubleThread = new Thread(doubleWriterRunnable);
        Thread writeStringThread = new Thread(stringWriterRunnable);

        readThread.start();
        writeIntegerThread.start();
        writeDoubleThread.start();
        writeStringThread.start();

        try {
            readThread.join();
            writeIntegerThread.join();
            writeDoubleThread.join();
            writeStringThread.join();
        } catch (InterruptedException eee) {
            System.out.println("–ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–º –ø—Ä–∏—á–∏–Ω–∞–º");
        }

        if(sessionParametres.statisticsType() != StatisticsType.NONE){
            System.out.println(statisticsHolder.getIntegerStatistics() + "\n" +
                    statisticsHolder.getDoubleStatistics() + "\n" +
                    statisticsHolder.getStringStatistics());
        }

        System.out.println("–†–∞–±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ üòé");
    }
}